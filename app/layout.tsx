import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ThemeProvider } from "./_components/theme-provider";
import MyApp from "@/components/MyApp";
import Sidebar from "./_components/Sidebar";
import AuthProvider from "@/components/Provider";
import { getServerSession } from "next-auth";
import { Toaster } from "@/components/ui/sonner";
import { Suspense } from "react";
import Preloader from "@/components/Loader/Preloader";
import ClientOnly from "./ClientOnly";
import authOptions from "./api/auth/[...nextauth]/authOptions";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession(authOptions).catch((error) => {
    console.error("Error fetching session:", error);
  });;

  return (
    <html lang="en" suppressHydrationWarning={true}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Suspense fallback={<Preloader />}>
          <AuthProvider session={session}>
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              <MyApp>
                <Sidebar>
                  <ClientOnly>{children}</ClientOnly>
                </Sidebar>
                <Toaster />
              </MyApp>
            </ThemeProvider>
          </AuthProvider>
        </Suspense>
      </body>
    </html>
  );
}
